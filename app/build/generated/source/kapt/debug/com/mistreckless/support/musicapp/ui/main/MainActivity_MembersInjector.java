// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.mistreckless.support.musicapp.ui.main;

import android.support.v4.app.Fragment;
import com.mistreckless.support.musicapp.ui.BaseActivity_MembersInjector;
import dagger.MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import javax.inject.Provider;

public final class MainActivity_MembersInjector implements MembersInjector<MainActivity> {
  private final Provider<DispatchingAndroidInjector<Fragment>> fragmentDispatcherProvider;

  private final Provider<MainPresenterProviderFactory> presenterProviderFactoryProvider;

  public MainActivity_MembersInjector(
      Provider<DispatchingAndroidInjector<Fragment>> fragmentDispatcherProvider,
      Provider<MainPresenterProviderFactory> presenterProviderFactoryProvider) {
    this.fragmentDispatcherProvider = fragmentDispatcherProvider;
    this.presenterProviderFactoryProvider = presenterProviderFactoryProvider;
  }

  public static MembersInjector<MainActivity> create(
      Provider<DispatchingAndroidInjector<Fragment>> fragmentDispatcherProvider,
      Provider<MainPresenterProviderFactory> presenterProviderFactoryProvider) {
    return new MainActivity_MembersInjector(
        fragmentDispatcherProvider, presenterProviderFactoryProvider);
  }

  @Override
  public void injectMembers(MainActivity instance) {
    BaseActivity_MembersInjector.injectFragmentDispatcher(
        instance, fragmentDispatcherProvider.get());
    BaseActivity_MembersInjector.injectPresenterProviderFactory(
        instance, presenterProviderFactoryProvider.get());
  }
}
