// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.mistreckless.support.musicapp.ui;

import android.support.v4.app.Fragment;
import dagger.MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import javax.inject.Provider;

public final class BaseActivity_MembersInjector<
        P extends BasePresenter<?, ?>, F extends BasePresenterProviderFactory<? extends P>>
    implements MembersInjector<BaseActivity<P, F>> {
  private final Provider<DispatchingAndroidInjector<Fragment>> fragmentDispatcherProvider;

  private final Provider<F> presenterProviderFactoryProvider;

  public BaseActivity_MembersInjector(
      Provider<DispatchingAndroidInjector<Fragment>> fragmentDispatcherProvider,
      Provider<F> presenterProviderFactoryProvider) {
    this.fragmentDispatcherProvider = fragmentDispatcherProvider;
    this.presenterProviderFactoryProvider = presenterProviderFactoryProvider;
  }

  public static <P extends BasePresenter<?, ?>, F extends BasePresenterProviderFactory<? extends P>>
      MembersInjector<BaseActivity<P, F>> create(
          Provider<DispatchingAndroidInjector<Fragment>> fragmentDispatcherProvider,
          Provider<F> presenterProviderFactoryProvider) {
    return new BaseActivity_MembersInjector<P, F>(
        fragmentDispatcherProvider, presenterProviderFactoryProvider);
  }

  @Override
  public void injectMembers(BaseActivity<P, F> instance) {
    injectFragmentDispatcher(instance, fragmentDispatcherProvider.get());
    injectPresenterProviderFactory(instance, presenterProviderFactoryProvider.get());
  }

  public static <P extends BasePresenter<?, ?>, F extends BasePresenterProviderFactory<? extends P>>
      void injectFragmentDispatcher(
          BaseActivity<P, F> instance, DispatchingAndroidInjector<Fragment> fragmentDispatcher) {
    instance.fragmentDispatcher = fragmentDispatcher;
  }

  public static <P extends BasePresenter<?, ?>, F extends BasePresenterProviderFactory<? extends P>>
      void injectPresenterProviderFactory(BaseActivity<P, F> instance, F presenterProviderFactory) {
    instance.presenterProviderFactory = presenterProviderFactory;
  }
}
