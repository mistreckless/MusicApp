// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.mistreckless.support.musicapp.domain;

import android.content.SharedPreferences;
import com.mistreckless.support.musicapp.domain.repository.UserRepository;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class RepositoryModule_ProvideUserRepositoryFactory
    implements Factory<UserRepository> {
  private final RepositoryModule module;

  private final Provider<Api> arg0Provider;

  private final Provider<SharedPreferences> arg1Provider;

  public RepositoryModule_ProvideUserRepositoryFactory(
      RepositoryModule module,
      Provider<Api> arg0Provider,
      Provider<SharedPreferences> arg1Provider) {
    this.module = module;
    this.arg0Provider = arg0Provider;
    this.arg1Provider = arg1Provider;
  }

  @Override
  public UserRepository get() {
    return Preconditions.checkNotNull(
        module.provideUserRepository(arg0Provider.get(), arg1Provider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<UserRepository> create(
      RepositoryModule module,
      Provider<Api> arg0Provider,
      Provider<SharedPreferences> arg1Provider) {
    return new RepositoryModule_ProvideUserRepositoryFactory(module, arg0Provider, arg1Provider);
  }
}
